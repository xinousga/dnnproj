<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="plSource.Text" xml:space="preserve">
    <value>广告源</value>
  </data>
  <data name="plSource.Help" xml:space="preserve">
    <value>指定是显示主机还是本站点中定义的广告</value>
  </data>
  <data name="plType.Text" xml:space="preserve">
    <value>广告类型</value>
  </data>
  <data name="plType.Help" xml:space="preserve">
    <value>指定广告类型</value>
  </data>
  <data name="plGroup.Text" xml:space="preserve">
    <value>广告组</value>
  </data>
  <data name="plGroup.Help" xml:space="preserve">
    <value>指定广告组名称</value>
  </data>
  <data name="plCount.Text" xml:space="preserve">
    <value>显示广告数</value>
  </data>
  <data name="plCount.Help" xml:space="preserve">
    <value>指定最多显示广告个数</value>
  </data>
  <data name="plOrientation.Text" xml:space="preserve">
    <value>方向</value>
  </data>
  <data name="plOrientation.Help" xml:space="preserve">
    <value>指定广告垂直或水平排列</value>
  </data>
  <data name="plBorder.Text" xml:space="preserve">
    <value>边框宽度</value>
  </data>
  <data name="plBorder.Help" xml:space="preserve">
    <value>设定边框宽度</value>
  </data>
  <data name="plRowHeight.Text" xml:space="preserve">
    <value>行高</value>
  </data>
  <data name="plRowHeight.Help" xml:space="preserve">
    <value>指定广告单元格的高度</value>
  </data>
  <data name="plColWidth.Text" xml:space="preserve">
    <value>列宽</value>
  </data>
  <data name="plColWidth.Help" xml:space="preserve">
    <value>指定每个广告单元格宽度</value>
  </data>
  <data name="cmdUpdate.Text" xml:space="preserve">
    <value>更新</value>
  </data>
  <data name="cmdCancel.Text" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="ControlTitle_edit.Text" xml:space="preserve">
    <value>编辑广告</value>
  </data>
  <data name="plBorderColor.Text" xml:space="preserve">
    <value>边框颜色</value>
  </data>
  <data name="plBorderColor.Help" xml:space="preserve">
    <value>指定边框颜色</value>
  </data>
  <data name="AllTypes.Text" xml:space="preserve">
    <value>&lt;所有类型&gt;</value>
  </data>
  <data name="Horizontal.Text" xml:space="preserve">
    <value>水平</value>
  </data>
  <data name="Host.Text" xml:space="preserve">
    <value>主机</value>
  </data>
  <data name="plPadding.Help" xml:space="preserve">
    <value>旗帜广告与表格边缘的距离</value>
  </data>
  <data name="plPadding.Text" xml:space="preserve">
    <value>单元格边距</value>
  </data>
  <data name="Site.Text" xml:space="preserve">
    <value>网站</value>
  </data>
  <data name="valBorder.ErrorMessage" xml:space="preserve">
    <value>&lt;br&gt;边框宽度必须是整数</value>
  </data>
  <data name="valColWidth.ErrorMessage" xml:space="preserve">
    <value>&lt;br&gt;列宽必须是整数</value>
  </data>
  <data name="valCount.ErrorMessage" xml:space="preserve">
    <value>&lt;br&gt;Banner计数必须是整数。</value>
  </data>
  <data name="valPadding.ErrorMessage" xml:space="preserve">
    <value>&lt;br&gt;单元格填充间距必须是整数</value>
  </data>
  <data name="valRowHeight.ErrorMessage" xml:space="preserve">
    <value>&lt;br&gt;行高必须是整数</value>
  </data>
  <data name="Vertical.Text" xml:space="preserve">
    <value>垂直</value>
  </data>
</root>