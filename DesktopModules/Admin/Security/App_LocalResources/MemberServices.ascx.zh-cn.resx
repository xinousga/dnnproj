<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Name.Header" xml:space="preserve">
    <value>姓名</value>
  </data>
  <data name="Description.Header" xml:space="preserve">
    <value>描述</value>
  </data>
  <data name="Fee.Header" xml:space="preserve">
    <value>服务费</value>
  </data>
  <data name="Every.Header" xml:space="preserve">
    <value>每</value>
  </data>
  <data name="Period.Header" xml:space="preserve">
    <value>周期</value>
  </data>
  <data name="Trial.Header" xml:space="preserve">
    <value>试用费</value>
  </data>
  <data name="ExpiryDate.Header" xml:space="preserve">
    <value>截止日期</value>
  </data>
  <data name="Subscribe.Text" xml:space="preserve">
    <value>加入</value>
  </data>
  <data name="Unsubscribe.Text" xml:space="preserve">
    <value>退出</value>
  </data>
  <data name="plRSVPCode.Text" xml:space="preserve">
    <value>RSVP 角色代码:</value>
  </data>
  <data name="plRSVPCode.Help" xml:space="preserve">
    <value>在此通过输入RSVP角色代码加入站点的应用服务， 如果您获得角色代码请输入并点击加入。</value>
  </data>
  <data name="cmdRSVP.Text" xml:space="preserve">
    <value>加入</value>
  </data>
  <data name="Expired.Text" xml:space="preserve">
    <value>过期</value>
  </data>
  <data name="Fee.Text" xml:space="preserve">
    <value>{0} 每 {1} {2}</value>
  </data>
  <data name="Frequency_D.Text" xml:space="preserve">
    <value>天</value>
  </data>
  <data name="Frequency_M.Text" xml:space="preserve">
    <value>月</value>
  </data>
  <data name="Frequency_W.Text" xml:space="preserve">
    <value>周</value>
  </data>
  <data name="Frequency_Y.Text" xml:space="preserve">
    <value>年</value>
  </data>
  <data name="NoFee.Text" xml:space="preserve">
    <value>免费</value>
  </data>
  <data name="Renew.Text" xml:space="preserve">
    <value>更新</value>
  </data>
  <data name="RSVPSuccess.Text" xml:space="preserve">
    <value>您已成功加入RSVP角色代码所对应的服务，请重新登录访问新加入的服务。</value>
  </data>
  <data name="RSVPFailure.Text" xml:space="preserve">
    <value>您输入的 RSVP 角色代码无效或不存在。</value>
  </data>
  <data name="ServicesHelp.Text" xml:space="preserve">
    <value>在此管理您所加入的服务， 如果要加入收费

服务，您将会被转向到收费站点。</value>
  </data>
  <data name="TrialFee.Text" xml:space="preserve">
    <value>{0} for {1} {2}</value>
  </data>
  <data name="UseTrial.Text" xml:space="preserve">
    <value>用户试用</value>
  </data>
  <data name="RSVPHelp.Text" xml:space="preserve">
    <value>如果您获得RSVP角色代码, 可以在下面输入RSVP代码，然后点击加入来加入角色代码对应的服务</value>
  </data>
</root>