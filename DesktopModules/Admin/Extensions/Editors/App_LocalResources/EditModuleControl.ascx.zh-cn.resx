<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="plModule.Text" xml:space="preserve">
    <value>模块名:</value>
  </data>
  <data name="plDefinition.Text" xml:space="preserve">
    <value>定义:</value>
  </data>
  <data name="plKey.Text" xml:space="preserve">
    <value>标识(key):</value>
  </data>
  <data name="plKey.Help" xml:space="preserve">
    <value>输入一个唯一的标识名(key)用以区别模块中的其它控件</value>
  </data>
  <data name="plTitle.Text" xml:space="preserve">
    <value>标题:</value>
  </data>
  <data name="plTitle.Help" xml:space="preserve">
    <value>为控件输入一个标题。如果容器支持，将会显示在模块的头部</value>
  </data>
  <data name="plSource.Text" xml:space="preserve">
    <value>控件:</value>
  </data>
  <data name="plSource.Help" xml:space="preserve">
    <value>选择控件或输入控件类型的命名空间</value>
  </data>
  <data name="plType.Text" xml:space="preserve">
    <value>类型:</value>
  </data>
  <data name="plType.Help" xml:space="preserve">
    <value>从列表中选择控件类型。</value>
  </data>
  <data name="Skin.Text" xml:space="preserve">
    <value>皮肤对象</value>
  </data>
  <data name="Anonymous.Text" xml:space="preserve">
    <value>匿名</value>
  </data>
  <data name="View.Text" xml:space="preserve">
    <value>显示</value>
  </data>
  <data name="Edit.Text" xml:space="preserve">
    <value>编辑</value>
  </data>
  <data name="Admin.Text" xml:space="preserve">
    <value>站点管理员</value>
  </data>
  <data name="Host.Text" xml:space="preserve">
    <value>主机管理员</value>
  </data>
  <data name="plViewOrder.Text" xml:space="preserve">
    <value>显示顺序:</value>
  </data>
  <data name="plViewOrder.Help" xml:space="preserve">
    <value>输入控件显示顺序</value>
  </data>
  <data name="plIcon.Text" xml:space="preserve">
    <value>小图标:</value>
  </data>
  <data name="plIcon.Help" xml:space="preserve">
    <value>为此模块控件选一个小图标，如果容器支持，将会显示在模块的头部。</value>
  </data>
  <data name="plHelpURL.Text" xml:space="preserve">
    <value>帮助链接:</value>
  </data>
  <data name="plHelpURL.Help" xml:space="preserve">
    <value>为模块提供一个帮助链接. 此链接将会显示在模块菜单中.</value>
  </data>
  <data name="plModule.Help" xml:space="preserve">
    <value>这是模块的别名。</value>
  </data>
  <data name="plDefinition.Help" xml:space="preserve">
    <value>这是模块定义的名称</value>
  </data>
  <data name="ControlTitle_editcontrol.Text" xml:space="preserve">
    <value>编辑模块控件</value>
  </data>
  <data name="ModuleHelp.Text" xml:space="preserve">
    <value>&lt;h1&gt;关于模块定义&lt;/h1&gt;&lt;p&gt;主机管理员可以管理安装在系统中的模块.&lt;/p&gt;</value>
  </data>
  <data name="AddControl.ErrorMessage" xml:space="preserve">
    <value>已经有一个控件拥有相同的标识(key)和路径.</value>
  </data>
  <data name="MissingSource.ErrorMessage" xml:space="preserve">
    <value>必须指定控件的来源值.</value>
  </data>
  <data name="plSupportsPartialRendering.Help" xml:space="preserve">
    <value>该标记显示此模块控件是否支持AJAX局部呈现.</value>
  </data>
  <data name="plSupportsPartialRendering.Text" xml:space="preserve">
    <value>支持AJAX局部呈现?</value>
  </data>
</root>